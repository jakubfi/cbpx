0.4.7

* GPL-ed
* scream with error if not all data is sent
* switch script added to 'set' listong options 
* total enqueued connections added back to stats

0.4.6

* 5 connectors as a workaround for lost packets during TCP handshake

0.4.5

* added RelayGate, reworked locking on relay
* backends moved to RelayGate

0.4.4

* transporter loop optimized by removing few calls and one unnecessary check
* switch exec script added
* stats: removed avgcps, added dequeued connections per second
* stats: able to use better resolution
* stats: removed enqueued/dequeued
* removed conn_lock lock

0.4.3

* fixed call to Queue.qsize()

0.4.2

* dead connection removing moved outside the epoll() loop
* release tool #-es l.debug lines for performance ;-)

0.4.1 (experimental)

* single transporter thread, epoll()
* main threads moved to cbpx class, cleaned main script
* log levels fixed: no rubbish at INFO level

0.4.0 (experimental)

* (internal tests: select(), poll(), epoll(), no transporters, single transporter)

0.3.3

* statistics moved to separate class
* connections per second counted
* 'stats' in loop mode checks if arguments are ok

0.3.2

* unknown command doesn't hang RC anymore
* quit ignores options other than 'force'

0.3.1

* 'quit force' added (closes all active connections in SOCK_FUCK_YOU mode)
* 'stats X Y' and 'stats X' sanitized to 'stats' in remote control mode
* 'set' now checks value type and ranges

0.3.0

* fixed log levels: INFO doesn't flood log anymore, only DEBUG does (INFO is default)
* remote control mode doesn't print anything on screen
* print_cfg() moved to cmd.py, print_logo() moved to readline ui
* rewritten switch procedure: used switch timer, new logic, new switch finish reason storage

0.2.10

* cleanup imports (for easier dependency handling)
* rename cmd_interface_ classes to ui_, separate module for ui_*
* python 2.5 enforced in shebang
* 'stats' now behaves even more like vmstat (stats [sleep] [count])
* test_connection() removed (it's not proxy's job)

0.2.9

* log level changes (important messages are INFO/WARNING now)
* TCP remote control
* command interface reworked for remote control
* connector started before listener
* git import, automated versioning (based on git branch), release tool

0.2.9-pre

* quick initial remote control for Karol's tests

0.2.8

* additional code comments
* Event.is_set() -> Event.isSet(): python 2.5 compatibility

0.2.7

* feature: throttling added
* max_open_conns added for throttling
* cleanup: max connection parameters naming fixed
* bugfix: switch_delay fixed

0.2.6

* porządki w kodzie
* nowe parametry wywołania
* switch_delay jest znów honorowany
* przesunięcie sprawdzania przekroczenia max_conn wcześniej w kodzie
* przygotowania do zdalnego sterowania (nie z linii poleceń)

0.2.5

* dodany switch
* feature: switch działa w dwie strony
* bugfix: obsługa ctrl-c przy switchu (przerywa procedurę)
* bugfix: switch zadziała natychmiast, jeśli w momencie uruchamiania go nie ma żadnych aktywnych połączeń
* kolejka ma nieskończoną długość, ale przy wkładaniu sprawdzamy, czy skolejkowanych połączeń nie jest więcej niż max_conn. Jeśli tak, to switch jest przerywany i kolejka spuszczana.
* poziom logowania domyślnie "WARNING" - ponieważ logging jest thread-aware, to robi w chuj locków i psuje wydajność, jak się okazuje.

0.2.4

* development version

0.2.3

* connector_threads usunięte z kodu (spada wydajność)

0.2.2

* connector_threads option displayed in set()

0.2.1

* connector_threads

0.2.0

* queue-only version (no switch)

0.1

* first revision
